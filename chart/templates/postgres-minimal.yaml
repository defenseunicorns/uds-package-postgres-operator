# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

{{- if .Values.postgresql.enabled }}
apiVersion: acid.zalan.do/v1
kind: postgresql
metadata:
  name: pg-cluster
  namespace: postgres
spec:
  env:
    {{- toYaml .Values.postgresql.env | nindent 4 }} 
  teamId: {{ .Values.postgresql.teamId | quote }}
  volume:
    size: {{ .Values.postgresql.volume.size | quote }}
  numberOfInstances: {{ .Values.postgresql.numberOfInstances }}
  users:
    {{- toYaml .Values.postgresql.users | nindent 4 }} # database owner
  databases:
    {{- toYaml .Values.postgresql.databases | nindent 4 }}
  patroni:
    pg_hba:
    {{- $defaultPgHba := list 
        "local   all             all                                     trust"
        "hostssl all             +zalandos            127.0.0.1/32       pam"
        "host    all             all                  127.0.0.1/32       scram-sha-256"
        "hostssl all             +zalandos            ::1/128            pam"
        "host    all             all                  ::1/128            scram-sha-256"
        "local   replication     standby                                 trust"
        "hostssl replication     standby all                             scram-sha-256"
        "hostnossl all           all                  all                reject"
        "hostssl all             +zalandos            all                pam"
        "hostssl all             all                  all                scram-sha-256"
    }}
    {{- if and (hasKey .Values.postgresql "patroni") (hasKey .Values.postgresql.patroni "pg_hba") }}
      {{- toYaml .Values.postgresql.patroni.pg_hba | nindent 6 }}
    {{- else }}
      {{- toYaml $defaultPgHba | nindent 6 }}
    {{- end }}
    {{- with (omit (.Values.postgresql.patroni | default dict) "pg_hba") }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  postgresql:
    parameters:
      password_encryption: scram-sha-256
    {{- range .Values.postgresql.parameters | default list }}
      {{- if ne .name "password_encryption" }}
      {{ .name }}: {{ .value | quote }}
      {{- end }}
    {{- end }}
    version: {{ .Values.postgresql.version | quote }}
  resources:
    {{- toYaml .Values.postgresql.resources | nindent 4 }}
  {{- if ne (len .Values.postgresql.additionalVolumes) 0 }}
  additionalVolumes:
    {{- range .Values.postgresql.additionalVolumes }}
    - {{ . | toYaml | nindent 6 }}
    {{- end }}
  {{- end }}
  {{- if .Values.postgresql.tls }}
  tls:
    {{- toYaml .Values.postgresql.tls | nindent 4 }}
  {{- end }}
  sidecars:
    - name: "exporter"
      image: {{ .Values.metrics.image | quote }}
      ports:
        - name: exporter
          containerPort: 9187
          protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 256M
        requests:
          cpu: 100m
          memory: 200M
      securityContext:
        runAsUser: 37
        runAsGroup: 37
      env:
        - name: "DATA_SOURCE_URI"
          value: "$(POD_NAME)/postgres"
        - name: "DATA_SOURCE_USER"
          valueFrom:
            secretKeyRef:
              name: postgres.pg-cluster.credentials.postgresql.acid.zalan.do
              key: username
        - name: "DATA_SOURCE_PASS"
          valueFrom:
            secretKeyRef:
              name: postgres.pg-cluster.credentials.postgresql.acid.zalan.do
              key: password
{{- end }}
